{"ast":null,"code":"var _jsxFileName = \"E:\\\\ProjectFolder\\\\TATA-ProjectWeb(Final)\\\\TATA-Web\\\\TATA-Web\\\\src\\\\components\\\\PdfUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, FileText, X, CheckCircle, AlertCircle, Loader } from 'lucide-react';\nimport { insuranceTypes } from '../data/insuranceTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfUpload = () => {\n  _s();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [selectedInsuranceType, setSelectedInsuranceType] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const newFiles = acceptedFiles.map(file => ({\n      id: Math.random().toString(36).substr(2, 9),\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      uploadedAt: new Date(),\n      status: 'uploading'\n    }));\n    setUploadedFiles(prev => [...prev, ...newFiles]);\n\n    // Simulate file processing\n    newFiles.forEach(file => {\n      setTimeout(() => {\n        setUploadedFiles(prev => prev.map(f => f.id === file.id ? {\n          ...f,\n          status: 'processing',\n          insuranceType: selectedInsuranceType || 'general'\n        } : f));\n        setTimeout(() => {\n          setUploadedFiles(prev => prev.map(f => f.id === file.id ? {\n            ...f,\n            status: 'completed',\n            availability: Math.random() > 0.3,\n            // 70% success rate\n            message: Math.random() > 0.3 ? 'Insurance coverage available! Contact us for details.' : 'Additional documentation required for verification.'\n          } : f));\n        }, 2000);\n      }, 1000);\n    });\n  }, [selectedInsuranceType]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    multiple: true\n  });\n  const removeFile = fileId => {\n    setUploadedFiles(prev => prev.filter(f => f.id !== fileId));\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'uploading':\n        return /*#__PURE__*/_jsxDEV(Loader, {\n          className: \"w-4 h-4 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this);\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(Loader, {\n          className: \"w-4 h-4 text-yellow-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"w-4 h-4 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'uploading':\n        return 'Uploading...';\n      case 'processing':\n        return 'Processing...';\n      case 'completed':\n        return 'Completed';\n      case 'error':\n        return 'Error';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-gray-900 mb-4\",\n        children: \"Upload Insurance Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 max-w-2xl mx-auto\",\n        children: \"Upload your insurance documents in PDF format to check coverage availability and get instant verification.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700 mb-2\",\n        children: \"Select Insurance Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedInsuranceType,\n        onChange: e => setSelectedInsuranceType(e.target.value),\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an insurance type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), insuranceTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type.id,\n          children: type.name\n        }, type.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors ${isDragActive ? 'border-primary-500 bg-primary-50' : 'border-gray-300 hover:border-primary-400 hover:bg-gray-50'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {\n        className: \"w-12 h-12 text-gray-400 mx-auto mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-primary-600 font-medium\",\n        children: \"Drop the PDF files here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-2\",\n          children: [\"Drag & drop PDF files here, or \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-primary-600 font-medium\",\n            children: \"click to browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Supports PDF files only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-4\",\n        children: \"Uploaded Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: uploadedFiles.map(file => {\n          var _insuranceTypes$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                className: \"w-8 h-8 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-medium text-gray-900\",\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500\",\n                  children: [formatFileSize(file.size), \" \\u2022 \", file.uploadedAt.toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), file.insuranceType && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-primary-600 font-medium\",\n                  children: (_insuranceTypes$find = insuranceTypes.find(t => t.id === file.insuranceType)) === null || _insuranceTypes$find === void 0 ? void 0 : _insuranceTypes$find.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [getStatusIcon(file.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: getStatusText(file.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), file.status === 'completed' && file.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `text-sm px-3 py-1 rounded-full ${file.availability ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`,\n                children: file.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFile(file.id),\n                className: \"text-gray-400 hover:text-red-500 transition-colors\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  className: \"w-5 h-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, file.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-3\",\n        children: \"Upload Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2 text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Ensure your PDF files are clear and legible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Include all relevant insurance documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Maximum file size: 10MB per file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 Processing time: 2-3 minutes per document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2022 You'll receive instant feedback on coverage availability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfUpload, \"Ivr5aHGd5tHiUE8yR6Rpiwq2E4E=\", false, function () {\n  return [useDropzone];\n});\n_c = PdfUpload;\nexport default PdfUpload;\nvar _c;\n$RefreshReg$(_c, \"PdfUpload\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","Upload","FileText","X","CheckCircle","AlertCircle","Loader","insuranceTypes","jsxDEV","_jsxDEV","PdfUpload","_s","uploadedFiles","setUploadedFiles","selectedInsuranceType","setSelectedInsuranceType","onDrop","acceptedFiles","newFiles","map","file","id","Math","random","toString","substr","name","size","type","uploadedAt","Date","status","prev","forEach","setTimeout","f","insuranceType","availability","message","getRootProps","getInputProps","isDragActive","accept","multiple","removeFile","fileId","filter","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","children","value","onChange","e","target","length","_insuranceTypes$find","toLocaleTimeString","find","t","onClick","_c","$RefreshReg$"],"sources":["E:/ProjectFolder/TATA-ProjectWeb(Final)/TATA-Web/TATA-Web/src/components/PdfUpload.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Upload, FileText, X, CheckCircle, AlertCircle, Loader } from 'lucide-react';\r\nimport { UploadedFile } from '../types';\r\nimport { insuranceTypes } from '../data/insuranceTypes';\r\n\r\nconst PdfUpload: React.FC = () => {\r\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\r\n  const [selectedInsuranceType, setSelectedInsuranceType] = useState<string>('');\r\n\r\n  const onDrop = useCallback((acceptedFiles: File[]) => {\r\n    const newFiles: UploadedFile[] = acceptedFiles.map((file) => ({\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: file.name,\r\n      size: file.size,\r\n      type: file.type,\r\n      uploadedAt: new Date(),\r\n      status: 'uploading' as const,\r\n    }));\r\n\r\n    setUploadedFiles(prev => [...prev, ...newFiles]);\r\n\r\n    // Simulate file processing\r\n    newFiles.forEach((file) => {\r\n      setTimeout(() => {\r\n        setUploadedFiles(prev => \r\n          prev.map(f => \r\n            f.id === file.id \r\n              ? { \r\n                  ...f, \r\n                  status: 'processing' as const,\r\n                  insuranceType: selectedInsuranceType || 'general'\r\n                }\r\n              : f\r\n          )\r\n        );\r\n\r\n        setTimeout(() => {\r\n          setUploadedFiles(prev => \r\n            prev.map(f => \r\n              f.id === file.id \r\n                ? { \r\n                    ...f, \r\n                    status: 'completed' as const,\r\n                    availability: Math.random() > 0.3, // 70% success rate\r\n                    message: Math.random() > 0.3 \r\n                      ? 'Insurance coverage available! Contact us for details.' \r\n                      : 'Additional documentation required for verification.'\r\n                  }\r\n                : f\r\n            )\r\n          );\r\n        }, 2000);\r\n      }, 1000);\r\n    });\r\n  }, [selectedInsuranceType]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'application/pdf': ['.pdf']\r\n    },\r\n    multiple: true\r\n  });\r\n\r\n  const removeFile = (fileId: string) => {\r\n    setUploadedFiles(prev => prev.filter(f => f.id !== fileId));\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const getStatusIcon = (status: UploadedFile['status']) => {\r\n    switch (status) {\r\n      case 'uploading':\r\n        return <Loader className=\"w-4 h-4 text-blue-500 animate-spin\" />;\r\n      case 'processing':\r\n        return <Loader className=\"w-4 h-4 text-yellow-500 animate-spin\" />;\r\n      case 'completed':\r\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: UploadedFile['status']) => {\r\n    switch (status) {\r\n      case 'uploading':\r\n        return 'Uploading...';\r\n      case 'processing':\r\n        return 'Processing...';\r\n      case 'completed':\r\n        return 'Completed';\r\n      case 'error':\r\n        return 'Error';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <div className=\"text-center mb-8\">\r\n        <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\r\n          Upload Insurance Documents\r\n        </h2>\r\n        <p className=\"text-gray-600 max-w-2xl mx-auto\">\r\n          Upload your insurance documents in PDF format to check coverage availability and get instant verification.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Insurance Type Selection */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          Select Insurance Type\r\n        </label>\r\n        <select\r\n          value={selectedInsuranceType}\r\n          onChange={(e) => setSelectedInsuranceType(e.target.value)}\r\n          className=\"input-field\"\r\n        >\r\n          <option value=\"\">Select an insurance type</option>\r\n          {insuranceTypes.map((type) => (\r\n            <option key={type.id} value={type.id}>\r\n              {type.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Upload Area */}\r\n      <div\r\n        {...getRootProps()}\r\n        className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors ${\r\n          isDragActive\r\n            ? 'border-primary-500 bg-primary-50'\r\n            : 'border-gray-300 hover:border-primary-400 hover:bg-gray-50'\r\n        }`}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <Upload className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n        {isDragActive ? (\r\n          <p className=\"text-primary-600 font-medium\">Drop the PDF files here...</p>\r\n        ) : (\r\n          <div>\r\n            <p className=\"text-gray-600 mb-2\">\r\n              Drag & drop PDF files here, or <span className=\"text-primary-600 font-medium\">click to browse</span>\r\n            </p>\r\n            <p className=\"text-sm text-gray-500\">Supports PDF files only</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Uploaded Files List */}\r\n      {uploadedFiles.length > 0 && (\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Uploaded Documents</h3>\r\n          <div className=\"space-y-3\">\r\n            {uploadedFiles.map((file) => (\r\n              <div key={file.id} className=\"card flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <FileText className=\"w-8 h-8 text-gray-400\" />\r\n                  <div>\r\n                    <p className=\"font-medium text-gray-900\">{file.name}</p>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {formatFileSize(file.size)} • {file.uploadedAt.toLocaleTimeString()}\r\n                    </p>\r\n                    {file.insuranceType && (\r\n                      <p className=\"text-xs text-primary-600 font-medium\">\r\n                        {insuranceTypes.find(t => t.id === file.insuranceType)?.name}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getStatusIcon(file.status)}\r\n                    <span className=\"text-sm text-gray-600\">{getStatusText(file.status)}</span>\r\n                  </div>\r\n                  \r\n                  {file.status === 'completed' && file.message && (\r\n                    <div className={`text-sm px-3 py-1 rounded-full ${\r\n                      file.availability \r\n                        ? 'bg-green-100 text-green-800' \r\n                        : 'bg-yellow-100 text-yellow-800'\r\n                    }`}>\r\n                      {file.message}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <button\r\n                    onClick={() => removeFile(file.id)}\r\n                    className=\"text-gray-400 hover:text-red-500 transition-colors\"\r\n                  >\r\n                    <X className=\"w-5 h-5\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div className=\"mt-8 card\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Upload Instructions</h3>\r\n        <ul className=\"space-y-2 text-sm text-gray-600\">\r\n          <li>• Ensure your PDF files are clear and legible</li>\r\n          <li>• Include all relevant insurance documents</li>\r\n          <li>• Maximum file size: 10MB per file</li>\r\n          <li>• Processing time: 2-3 minutes per document</li>\r\n          <li>• You'll receive instant feedback on coverage availability</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}